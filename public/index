<?php
declare(strict_types=1);

/**
 * Index do Painel — compatível com seus arquivos atuais.
 * - Usa suas dependências originais
 * - Mantém exigeLogin() e refreshPermissoes()
 * - Resolve rotas automaticamente: page.php, page-2.php, e alias admin_pagamentos⇄pagamentos_admin
 * - Evita "Cannot modify header information" com output buffer
 */

require_once __DIR__ . '/conexao.php';
require_once __DIR__ . '/config.php';

// Segurança / sessão conforme seu sistema
if (function_exists('exigeLogin')) {
    exigeLogin();
}
if (function_exists('refreshPermissoes')) {
    try { refreshPermissoes($pdo); } catch (Throwable $e) {
        if (getenv('APP_DEBUG') === '1') {
            error_log('[refreshPermissoes] ' . $e->getMessage());
        }
    }
}

// $routes pode vir do seu config.php. Se não vier, iniciamos vazio.
if (!isset($routes) || !is_array($routes)) { $routes = []; }

// Rota solicitada
$page = (string)($_GET['page'] ?? 'dashboard');
$page = preg_replace('/[^a-z0-9_\-]/i', '', $page); // permite hífen

// Resolve caminho do arquivo da rota
$alvo = null;

// 1) Se config.php mapeou e o arquivo existe, usa
if (isset($routes[$page])) {
    $candidato = $routes[$page];
    // Se veio só o nome, posiciona na pasta atual
    if (!str_contains($candidato, DIRECTORY_SEPARATOR)) {
        $candidato = __DIR__ . '/' . ltrim($candidato, '/');
    }
    if (is_file($candidato)) {
        $alvo = $candidato;
    }
}

// 2) Heurística de fallback (sem depender do $routes)
if (!$alvo) {
    $candidatos = [];

    // page.php e page-2.php
    $candidatos[] = __DIR__ . "/{$page}.php";
    $candidatos[] = __DIR__ . "/{$page}-2.php";

    // alias admin_pagamentos <-> pag/adm
    if ($page === 'admin_pagamentos') {
        $candidatos[] = __DIR__ . "/pagamentos_admin.php";
    }
    if ($page === 'pagamentos_admin') {
        $candidatos[] = __DIR__ . "/admin_pagamentos.php";
    }

    // Tenta cada candidato
    foreach ($candidatos as $c) {
        if (is_file($c)) { $alvo = $c; break; }
    }
}

if (!$alvo || !is_file($alvo)) {
    http_response_code(404);
    echo "<!doctype html><meta charset='utf-8'><style>body{font-family:system-ui;background:#0b1a33;color:#fff;padding:40px}</style><h1>404</h1><p>Página não encontrada.</p>";
    exit;
}

// ===== Evita "headers already sent" =====
// Carrega a página de destino em buffer. Se ela der header('Location: ...'), não imprimimos layout.
ob_start();
require $alvo;
$conteudo = ob_get_clean();

// Se foi enviado Location, respeita o redirect e não imprime nada
foreach (headers_list() as $h) {
    if (stripos($h, 'Location:') === 0) { exit; }
}
?>
<!doctype html>
<html lang="pt-BR">
<head>
<meta charset="utf-8">
<title>Painel Smile — <?=htmlspecialchars($page)?></title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="icon" href="/favicon.ico">
<link rel="stylesheet" href="/estilo.css">
</head>
<body>
<?php if (is_file(__DIR__ . '/sidebar.php')) { require __DIR__ . '/sidebar.php'; } ?>
<?= $conteudo ?>
</body>
</html>
